{"version":3,"file":"browser.js","sourceRoot":"","sources":["../src/browser.ts"],"names":[],"mappings":"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","sourcesContent":["import { once } from \"@servie/events\";\nimport { byteLength } from \"byte-length\";\nimport { expectType } from \"ts-expect\";\nimport { Headers, HeadersInit } from \"./headers\";\nimport { Signal } from \"./signal\";\nimport {\n  CommonBody,\n  useRawBody,\n  EmptyBody,\n  CommonRequestOptions,\n  CommonResponseOptions,\n  CommonResponse,\n  CommonRequest,\n  kBodyUsed,\n  kBodyDestroyed,\n  getRawBody\n} from \"./common\";\n\nexport type RawBody = ReadableStream | ArrayBuffer | string;\nexport type CreateBody = RawBody | EmptyBody;\nexport type RequestOptions = CommonRequestOptions<CreateBody>;\nexport type ResponseOptions = CommonResponseOptions;\n\nexport * from \"./headers\";\nexport * from \"./signal\";\n\n/**\n * Convert array buffer to string.\n */\nfunction arrayBufferToText(buffer: ArrayBuffer): string {\n  const view = new DataView(buffer);\n  const decoder = new TextDecoder(\"utf-8\");\n  return decoder.decode(view);\n}\n\n/**\n * Convert a string to `Uint8Array`.\n */\nfunction textToUint8Array(text: string): Uint8Array {\n  const encoder = new TextEncoder();\n  return encoder.encode(text);\n}\n\n/**\n * Convert browser stream to array buffer.\n */\nfunction streamToArrayBuffer(stream: ReadableStream) {\n  const reader = stream.getReader();\n\n  function next(buffer: Uint8Array): Promise<Uint8Array> {\n    return reader.read().then(result => {\n      if (result.done) return buffer;\n\n      const chunk: Uint8Array = result.value;\n      const tmpBuffer = new Uint8Array(buffer.byteLength + chunk.byteLength);\n      tmpBuffer.set(buffer, 0);\n      tmpBuffer.set(chunk, buffer.byteLength);\n      return next(tmpBuffer);\n    });\n  }\n\n  return next(new Uint8Array(0));\n}\n\n/**\n * Browser `Body` implementation.\n */\nexport class Body implements CommonBody<RawBody> {\n  $rawBody: RawBody | null | typeof kBodyUsed | typeof kBodyDestroyed;\n\n  constructor(body: CreateBody) {\n    const rawBody = body === undefined ? null : body;\n\n    this.$rawBody = rawBody;\n  }\n\n  get bodyUsed() {\n    return this.$rawBody === kBodyUsed || this.$rawBody === kBodyDestroyed;\n  }\n\n  json(): Promise<any> {\n    return this.text().then(x => JSON.parse(x));\n  }\n\n  text(): Promise<string> {\n    const rawBody = useRawBody(this);\n    if (rawBody === null) return Promise.resolve(\"\");\n    if (typeof rawBody === \"string\") return Promise.resolve(rawBody);\n    if (rawBody instanceof ArrayBuffer) {\n      return Promise.resolve(arrayBufferToText(rawBody));\n    }\n    return streamToArrayBuffer(rawBody).then(arrayBufferToText);\n  }\n\n  arrayBuffer(): Promise<ArrayBuffer> {\n    const rawBody = useRawBody(this);\n    if (rawBody === null) return Promise.resolve(new ArrayBuffer(0));\n    if (rawBody instanceof ArrayBuffer) return Promise.resolve(rawBody);\n    if (typeof rawBody === \"string\") {\n      return Promise.resolve(textToUint8Array(rawBody).buffer);\n    }\n    return streamToArrayBuffer(rawBody);\n  }\n\n  readableStream(): ReadableStream<Uint8Array> {\n    const rawBody = useRawBody(this);\n\n    if (rawBody === null) {\n      return new ReadableStream({\n        start(controller) {\n          controller.close();\n        }\n      });\n    }\n\n    if (typeof rawBody === \"string\") {\n      return new ReadableStream({\n        start(controller) {\n          controller.enqueue(textToUint8Array(rawBody));\n          controller.close();\n        }\n      });\n    }\n\n    if (rawBody instanceof ArrayBuffer) {\n      return new ReadableStream({\n        start(controller) {\n          controller.enqueue(new Uint8Array(rawBody));\n          controller.close();\n        }\n      });\n    }\n\n    return rawBody;\n  }\n\n  clone(): Body {\n    const rawBody = getRawBody(this);\n\n    if (rawBody instanceof ReadableStream) {\n      const [selfRawBody, clonedRawBody] = rawBody.tee();\n      this.$rawBody = selfRawBody;\n      return new Body(clonedRawBody);\n    }\n\n    return new Body(rawBody);\n  }\n\n  destroy(): Promise<void> {\n    const rawBody = getRawBody(this);\n    this.$rawBody = kBodyDestroyed;\n\n    // Destroy readable streams.\n    if (rawBody instanceof ReadableStream) return rawBody.cancel();\n    return Promise.resolve();\n  }\n}\n\n/**\n * Browser `Request` implementation.\n */\nexport class Request extends Body implements CommonRequest<RawBody> {\n  url: string;\n  method: string;\n  headers: Headers;\n  trailer: Promise<Headers>;\n  readonly signal: Signal;\n\n  constructor(input: string | Request, init: RequestOptions = {}) {\n    // Clone request or use passed options object.\n    const req = typeof input === \"string\" ? undefined : input.clone();\n    const rawBody = init.body || (req ? getRawBody(req) : null);\n    const headers =\n      req && !init.headers\n        ? req.headers\n        : getDefaultHeaders(\n            rawBody,\n            init.headers,\n            init.omitDefaultHeaders === true\n          );\n\n    super(rawBody);\n\n    this.url = typeof input === \"string\" ? input : input.url;\n    this.method = init.method || (req && req.method) || \"GET\";\n    this.signal = init.signal || (req && req.signal) || new Signal();\n    this.headers = headers;\n    this.trailer =\n      req && !init.trailer\n        ? req.trailer\n        : Promise.resolve<HeadersInit | undefined>(init.trailer).then(\n            x => new Headers(x)\n          );\n\n    // Destroy body on abort.\n    once(this.signal, \"abort\", () => this.destroy());\n  }\n\n  clone(): Request {\n    const cloned = super.clone();\n\n    return new Request(this.url, {\n      body: getRawBody(cloned),\n      headers: this.headers.clone(),\n      omitDefaultHeaders: true,\n      method: this.method,\n      signal: this.signal,\n      trailer: this.trailer.then(x => x.clone())\n    });\n  }\n}\n\n/**\n * Browser `Response` implementation.\n */\nexport class Response extends Body implements CommonResponse<RawBody> {\n  status: number;\n  statusText: string;\n  headers: Headers;\n  trailer: Promise<Headers>;\n\n  get ok() {\n    return this.status >= 200 && this.status < 300;\n  }\n\n  constructor(body?: CreateBody, init: ResponseOptions = {}) {\n    const headers = getDefaultHeaders(\n      body,\n      init.headers,\n      init.omitDefaultHeaders === true\n    );\n\n    super(body);\n\n    this.status = init.status || 200;\n    this.statusText = init.statusText || \"\";\n    this.headers = headers;\n    this.trailer = Promise.resolve<HeadersInit | undefined>(init.trailer).then(\n      x => new Headers(x)\n    );\n  }\n\n  clone(): Response {\n    const cloned = super.clone();\n\n    return new Response(getRawBody(cloned), {\n      status: this.status,\n      statusText: this.statusText,\n      headers: this.headers.clone(),\n      omitDefaultHeaders: true,\n      trailer: this.trailer.then(x => x.clone())\n    });\n  }\n}\n\n/**\n * Get default headers for `Request` and `Response` instances.\n */\nfunction getDefaultHeaders(\n  rawBody: CreateBody,\n  init: HeadersInit | undefined,\n  omitDefaultHeaders: boolean\n) {\n  const headers = new Headers(init);\n\n  if (rawBody === null || rawBody === undefined) return headers;\n\n  if (typeof rawBody === \"string\") {\n    if (!omitDefaultHeaders && !headers.has(\"Content-Type\")) {\n      headers.set(\"Content-Type\", \"text/plain\");\n    }\n\n    if (!omitDefaultHeaders && !headers.has(\"Content-Length\")) {\n      headers.set(\"Content-Length\", byteLength(rawBody).toString());\n    }\n\n    return headers;\n  }\n\n  // Default to \"octet stream\" for raw bodies.\n  if (!omitDefaultHeaders && !headers.has(\"Content-Type\")) {\n    headers.set(\"Content-Type\", \"application/octet-stream\");\n  }\n\n  if (rawBody instanceof ArrayBuffer) {\n    if (!omitDefaultHeaders && !headers.has(\"Content-Length\")) {\n      headers.set(\"Content-Length\", String(rawBody.byteLength));\n    }\n\n    return headers;\n  }\n\n  if (rawBody instanceof ReadableStream) return headers;\n\n  expectType<never>(rawBody);\n\n  throw new TypeError(\"Unknown body type\");\n}\n"]}