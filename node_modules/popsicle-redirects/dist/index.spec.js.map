{"version":3,"file":"index.spec.js","sourceRoot":"","sources":["../src/index.spec.ts"],"names":[],"mappings":";;AAAA,mCAAoC;AACpC,2CAAqD;AAErD,QAAQ,CAAC,oBAAoB,EAAE,GAAG,EAAE;IAClC,MAAM,GAAG,GAAG,IAAI,cAAO,CAAC,qBAAqB,CAAC,CAAC;IAC/C,MAAM,EAAE,GAAG,IAAI,eAAQ,CAAC,IAAI,EAAE,EAAE,MAAM,EAAE,GAAG,EAAE,CAAC,CAAC;IAE/C,MAAM,QAAQ,GAAG,IAAI,eAAQ,CAAC,IAAI,EAAE;QAClC,MAAM,EAAE,GAAG;QACX,OAAO,EAAE;YACP,QAAQ,EAAE,OAAO;SAClB;KACF,CAAC,CAAC;IAEH,EAAE,CAAC,sCAAsC,EAAE,KAAK,IAAI,EAAE;QACpD,IAAI,CAAC,GAAG,CAAC,CAAC;QAEV,MAAM,GAAG,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,EAAC,GAAG,EAAC,EAAE;YAC9B,IAAI,CAAC,EAAE,KAAK,CAAC;gBAAE,OAAO,QAAQ,CAAC,KAAK,EAAE,CAAC;YACvC,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,yBAAyB,CAAC,CAAC;YACnD,OAAO,EAAE,CAAC,KAAK,EAAE,CAAC;QACpB,CAAC,CAAC,CAAC;QAEH,MAAM,SAAS,GAAG,iBAAS,CAAC,GAAG,CAAC,CAAC;QAEjC,MAAM,GAAG,GAAG,MAAM,SAAS,CAAC,GAAG,CAAC,KAAK,EAAE,EAAE,KAAK,IAAI,EAAE;YAClD,MAAM,IAAI,SAAS,CAAC,qBAAqB,CAAC,CAAC;QAC7C,CAAC,CAAC,CAAC;QAEH,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;QAChC,MAAM,CAAC,GAAG,CAAC,CAAC,qBAAqB,CAAC,CAAC,CAAC,CAAC;IACvC,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["import { redirects } from \"./index\";\nimport { Request, Response } from \"servie/dist/node\";\n\ndescribe(\"popsicle redirects\", () => {\n  const req = new Request(\"http://example.com/\");\n  const ok = new Response(null, { status: 200 });\n\n  const redirect = new Response(null, {\n    status: 302,\n    headers: {\n      Location: \"/test\"\n    }\n  });\n\n  it(\"should use cookie store for requests\", async () => {\n    let i = 0;\n\n    const spy = jest.fn(async req => {\n      if (i++ === 0) return redirect.clone();\n      expect(req.url).toEqual(\"http://example.com/test\");\n      return ok.clone();\n    });\n\n    const transport = redirects(spy);\n\n    const res = await transport(req.clone(), async () => {\n      throw new TypeError(\"Unexpected response\");\n    });\n\n    expect(res.status).toEqual(200);\n    expect(spy).toHaveBeenCalledTimes(2);\n  });\n});\n"]}